<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:grok="http://namespaces.zope.org/grok"
    xmlns:plone="http://namespaces.plone.org/plone"
    i18n_domain="collective.imageReference">

  <!-- Include configuration for dependencies listed in setup.py -->
  
  <includeDependencies package="." />

  <!-- Grok the package to initialize schema interfaces and content classes -->
  <grok:grok package="." />

  <include package="plone.behavior" file="meta.zcml"/>

  <!-- Register a resource directory from which we can deploy static
   resource files. -->
  <browser:resourceDirectory
    name="collective.imageReference"
    directory="resources" />

  <i18n:registerTranslations directory="locales" />

  <!-- Register an extension profile to make the product installable
       in Plone -->
  <genericsetup:registerProfile
      name="default"
      title="imageReference"
      directory="profiles/default"
      description="Information about an imageReference"
      provides="Products.GenericSetup.interfaces.EXTENSION"
      />


  <plone:behavior
    title="Image extra fields"
    description="Adds extra fields for image content type"
    provides=".imageReference.IImageReference"
    factory=".imageReference.ImageReference"
    for="plone.dexterity.interfaces.IDexterityContent"
    marker=".imageReference.IImageReference"
    />


  <browser:page
      name="image_reference_view"
      for="plone.app.contenttypes.interfaces.IImage"
      template="imageReference_templates/image.pt"
      class=".utils.views.ImageReferenceView"
      permission="zope2.View"
      menu="plone_displayviews"
      title="View Image "
      />


  <!-- Custom Edit form -->
  <browser:page
    name="edit"
    for="collective.imageReference.imageReference.IImageReference"
    class="collective.imageReference.imageReference.EditForm"
    permission="cmf.ModifyPortalContent"
    />

  <!-- Custom Add form -->
  <adapter
    for="Products.CMFCore.interfaces.IFolderish
         zope.publisher.interfaces.browser.IDefaultBrowserLayer
         plone.dexterity.interfaces.IDexterityFTI"
    provides="zope.publisher.interfaces.browser.IBrowserPage"
    factory=".imageReference.AddView"
    name="Image"
  />
  
  <class class=".imageReference.AddForm">
    <require
        permission="cmf.AddPortalContent"
        interface="zope.publisher.interfaces.browser.IBrowserPage"
        />
  </class>

  <!-- Custom Add and Edit form macro -->
  <browser:page
      for="*"
      name="collective.imageReference.fieldsetmacro"
      template="imageReference_templates/fieldsetmacro.pt"
      permission="zope.Public"
    />

  <!-- Custom plone form widget -->
  <browser:page
    name="ploneform-render-widget"
    for=".imageReference.IFormWidget"
    class="plone.app.z3cform.templates.RenderWidget"
    permission="zope.Public"
    template="imageReference_templates/widget.pt"
  />


  <!-- -*- extra stuff goes here -*- -->
  <adapter name="reproductionData_identification_reproductionType" factory=".utils.indexers.reproductionData_identification_reproductionType" />
  
  <utility
    component=".utils.vocabularies.ReproductionTypeFactory"
    name="collective.imageReference.reproductionType"
    />

  <adapter name="reproductionData_identification_technique" factory=".utils.indexers.reproductionData_identification_technique" />
  
  <utility
    component=".utils.vocabularies.TechniqueFactory"
    name="collective.imageReference.technique"
    />

  <adapter name="reproductionData_identification_location" factory=".utils.indexers.reproductionData_identification_location" />
  
  <utility
    component=".utils.vocabularies.LocationFactory"
    name="collective.imageReference.location"
    />

  <adapter name="reproductionData_descriptiveElements_subject" factory=".utils.indexers.reproductionData_descriptiveElements_subject" />
  
  <utility
    component=".utils.vocabularies.SubjectFactory"
    name="collective.imageReference.subject"
    />

  <adapter name="reproductionData_descriptiveElements_coverage" factory=".utils.indexers.reproductionData_descriptiveElements_coverage" />
  
  <utility
    component=".utils.vocabularies.CoverageFactory"
    name="collective.imageReference.coverage"
    />


</configure>
